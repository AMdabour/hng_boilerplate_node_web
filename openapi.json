{
  "openapi": "3.0.1",
  "info": {
    "title": "HNG Boilerplate NodeJS API design by team egen",
    "version": "1.0.0",
    "description": "Comprehensive API design for HNG11 stage three backend task"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered Succcessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Logged-in Succcessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Log out a user",
        "responses": {
          "204": {
            "description": "User logged out"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Request password reset",
        "description": "Send a password reset email to the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset email sent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "description": "Reset the user's password using a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "reset_token"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "new_password"
                  }
                },
                "required": [
                  "token",
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password reset successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid token or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "summary": "List all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "12345"
                      },
                      "username": {
                        "type": "string",
                        "example": "john_doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "john_doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "new_password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}/settings": {
      "get": {
        "summary": "Get user settings by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string",
                      "example": "en"
                    },
                    "timezone": {
                      "type": "string",
                      "example": "America/New_York"
                    },
                    "notificationPreferences": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "boolean",
                          "example": true
                        },
                        "sms": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user settings by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string",
                    "example": "en"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "America/New_York"
                  },
                  "notificationPreferences": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "boolean",
                        "example": true
                      },
                      "sms": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "language": {
                      "type": "string",
                      "example": "en"
                    },
                    "timezone": {
                      "type": "string",
                      "example": "America/New_York"
                    },
                    "notificationPreferences": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "boolean",
                          "example": true
                        },
                        "sms": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}/profile": {
      "get": {
        "summary": "Get user profile by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Software developer with a passion for open-source projects."
                    },
                    "avatarUrl": {
                      "type": "string",
                      "example": "http://example.com/avatar.jpg"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user profile by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "bio": {
                    "type": "string",
                    "example": "Software developer with a passion for open-source projects."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "example": "http://example.com/avatar.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "12345"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "firstName": {
                      "type": "string",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Software developer with a passion for open-source projects."
                    },
                    "avatarUrl": {
                      "type": "string",
                      "example": "http://example.com/avatar.jpg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "summary": "Create a new organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Acme Corporation"
                  },
                  "description": {
                    "type": "string",
                    "example": "A company that sells Acme products"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "org123"
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Corporation"
                    },
                    "description": {
                      "type": "string",
                      "example": "A company that sells Acme products"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "summary": "Get all organizations",
        "responses": {
          "200": {
            "description": "A list of organizations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "org123"
                      },
                      "name": {
                        "type": "string",
                        "example": "Acme Corporation"
                      },
                      "description": {
                        "type": "string",
                        "example": "A company that sells Acme products"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No organizations found"
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "summary": "Get organization by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "org123"
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Corporation"
                    },
                    "description": {
                      "type": "string",
                      "example": "A company that sells Acme products"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "put": {
        "summary": "Update organization by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Acme Corporation"
                  },
                  "description": {
                    "type": "string",
                    "example": "A company that sells Acme products"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organization updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "org123"
                    },
                    "name": {
                      "type": "string",
                      "example": "Acme Corporation"
                    },
                    "description": {
                      "type": "string",
                      "example": "A company that sells Acme products"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "delete": {
        "summary": "Delete organization by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Organization deleted successfully"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/organizations/{id}/members": {
      "get": {
        "summary": "List all members of the organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "user123"
                      },
                      "username": {
                        "type": "string",
                        "example": "john_doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found"
          }
        }
      },
      "post": {
        "summary": "Add a new member to the organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "example": "user123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user123"
                    },
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/organizations/{id}/members/{userId}": {
      "delete": {
        "summary": "Remove a member from the organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "user123"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Member removed successfully"
          },
          "404": {
            "description": "Organization or member not found"
          }
        }
      }
    },
    "/organizations/{id}/invite": {
      "post": {
        "summary": "Invite a new member to the organization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "org123"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "invitee@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invitation sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "invitee@example.com"
                    },
                    "status": {
                      "type": "string",
                      "example": "invited"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Organization not found"
          }
        }
      }
    },
    "/payments": {
      "get": {
        "summary": "Get all payments",
        "responses": {
          "200": {
            "description": "A list of payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": 12345
                      },
                      "productName": {
                        "type": "string",
                        "example": "cloth"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No payments found"
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Get payment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": 12345
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": 12345
                    },
                    "ProductName": {
                      "type": "string",
                      "example": "cloth"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Payment not found"
          }
        }
      }
    },
    "/admin": {
      "get": {
        "summary": "Admin infomation",
        "responses": {
          "200": {
            "description": "Admin information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "12345"
                      },
                      "username": {
                        "type": "string",
                        "example": "john_doe"
                      },
                      "role": {
                        "type": "string",
                        "example": "admin"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "summary": "List all users by admin",
        "responses": {
          "200": {
            "description": "A list of users by admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "12345"
                      },
                      "username": {
                        "type": "string",
                        "example": "john_doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/organisations": {
      "get": {
        "summary": "Get all organizations by admin",
        "responses": {
          "200": {
            "description": "A list of organizations by admin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "org123"
                      },
                      "name": {
                        "type": "string",
                        "example": "Acme Corporation"
                      },
                      "description": {
                        "type": "string",
                        "example": "A company that sells Acme products"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No organizations found"
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "Get all comments",
        "responses": {
          "200": {
            "description": "A list of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": 12345
                      },
                      "author": {
                        "type": "string",
                        "example": "i want to be part of this"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/comment/{id}": {
      "get": {
        "summary": "Get comment by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": 12345
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": 12345
                    },
                    "author": {
                      "type": "string",
                      "example": "i want to be part of this"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Comment not found"
          }
        }
      }
    }
  }
}